.wrapper{max-width:1200px;margin:0 auto;width:100%}*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth;font-size:62.5%}body{font-family:Montserrat,sans-serif;font-size:1.6rem}.navbar{position:fixed;width:100%;height:7vh;background-color:#f6f6f6;z-index:1}.navbar,.navbar__box{display:flex;align-items:center;padding:1em}.navbar__box{justify-content:space-between}.navbar__logo{font-size:2rem}.navbar__burger-icon{position:relative;padding:1em;cursor:pointer}.navbar__burger-icon-bar{display:block;width:30px;height:3px;border-radius:1px;margin:5px 0;background-color:#333;transition:transform .3s,opacity .3s}.navbar__burger-icon-bar.top.active{transform:rotate(45deg) translate(5px,5px)}.navbar__burger-icon-bar.mid.active{transform:translateX(-30px);opacity:0}.navbar__burger-icon-bar.bot.active{transform:rotate(-45deg) translate(6px,-7px)}.menu-mobile{position:fixed;width:100%;top:-200px;left:0;padding:2em 4em;transition:top 1s cubic-bezier(.65,.05,.36,1);background-color:#f6f6f6}.menu-mobile__list{list-style:none}.menu-mobile__list-item{position:relative;margin-bottom:1.5em;background-color:#f6f6f6}.menu-mobile__list-item:before{position:absolute;left:-1em;content:"";height:100%;width:3px;background-color:#333}.menu-mobile__list-item a{text-decoration:none;color:#333;font-size:2rem;font-weight:300}.menu-mobile__list-item.active{animation:a 1s both}.menu-mobile.active{top:7vh}@keyframes a{0%{transform:translateY(-400%)}to{transform:translateY(0)}}@media (min-width:576px){.navbar{padding:.8em 2.5em}.navbar__logo{font-size:3.5rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
